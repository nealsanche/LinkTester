buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'clusterkraf/library/src']
            resources.srcDirs = ['src/main/res']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/main/rs']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }

        instrumentTest.setRoot('tests')
    }

    signingConfigs {
        releaseConfig {
            storeFile file("release.keystore")
            storePassword "Mac111Mac111"
            keyAlias "thorinside"
            keyPassword "Mac111Mac111"
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.releaseConfig
        }
    }

    productFlavors {

        def getVersionCode = { ->
            try {
                def code = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'tag', '--list'
                    standardOutput = code
                }
                return code.toString().split("\n").size()
            }
            catch (ignored) {
                return -1;
            }
        }

        def getVersionName = { ->
            try {
                def stdout = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'describe', '--match=[^(hudson)].*', '--tags', '--dirty'
                    standardOutput = stdout
                }
                return stdout.toString().trim()
            }
            catch (ignored) {
                return null;
            }
        }

        development {
            versionName getVersionName()
            versionCode getVersionCode()
        }
        production {
            versionName getVersionName()
            versionCode getVersionCode()
        }
    }

}

dependencies {
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.google.android.gms:play-services:4.3.23'
    compile 'com.squareup.retrofit:retrofit:1.3.0'
    compile 'com.squareup.okhttp:okhttp:1.3.0'
    compile 'commons-io:commons-io:2.4'
    compile 'org.jsoup:jsoup:1.7.3'
    compile 'com.google.maps.android:android-maps-utils:0.3.1'
    compile 'com.nineoldandroids:library:2.4.0'

    compile 'com.j256.ormlite:ormlite-android:4.48'

    compile 'com.github.davidmoten:geo:0.6.5'
}
